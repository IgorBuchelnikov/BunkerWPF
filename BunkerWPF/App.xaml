<Application x:Class="BunkerWPF.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:BunkerWPF"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <ResourceDictionary>

            <SolidColorBrush x:Key="PanelBrush" Color="#A9000000"/>
            <SolidColorBrush x:Key="TextBrush" Color="White"/>
            <SolidColorBrush x:Key="BorderBrush" Color="#FFC9C9C9"/>
            <SolidColorBrush x:Key="FoneBrush" Color="Black"/>
            <SolidColorBrush x:Key="PathBrush" Color="White"/>
            <SolidColorBrush x:Key="MouseOver" Color="#A9212121"/>
            <SolidColorBrush x:Key="MousePressed" Color="#A94F4F4F"/>
            <SolidColorBrush x:Key="SelectedBrush" Color="Gray"/>
            <Color x:Key="SelectedColor">Gray</Color>
            <FontFamily x:Key="Font">Yu Gothic UI Light</FontFamily>

            <Style x:Key="TextBoxDS" TargetType="{x:Type TextBox}">
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="OverridesDefaultStyle" Value="True" />
                <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="AllowDrop" Value="true" />
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="CaretBrush" Value="{DynamicResource PathBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                <Setter Property="FontFamily" Value="{DynamicResource Font}"/>
                <Setter Property="FontSize" Value="16"/>
                <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TextBoxBase}">
                            <Border Name="Border"
                            BorderThickness="0,0,0,1"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}">
                                <ScrollViewer Margin="0" x:Name="PART_ContentHost" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="Border" Property="Background" Value="DimGray"/>
                                </Trigger>
                                <Trigger Property="IsReadOnly" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="DimGray"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="TextBoxCDS" TargetType="{x:Type TextBox}">
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="OverridesDefaultStyle" Value="True" />
                <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="AllowDrop" Value="true" />
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="CaretBrush" Value="{DynamicResource PathBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                <Setter Property="FontFamily" Value="{DynamicResource Font}"/>
                <Setter Property="FontSize" Value="16"/>
                <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
                <Setter Property="Background" Value="{DynamicResource PanelBrush}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TextBoxBase}">
                            <Border Name="Border"
                            BorderThickness="1"
                            CornerRadius="5"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}">
                                <ScrollViewer Margin="0" x:Name="PART_ContentHost" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="Border" Property="Background" Value="DimGray"/>
                                </Trigger>
                                <Trigger Property="IsReadOnly" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="DimGray"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
            <Style x:Key="PassBoxDS" TargetType="{x:Type PasswordBox}">
                <Setter Property="SnapsToDevicePixels" Value="true" />
                <Setter Property="OverridesDefaultStyle" Value="true" />
                <Setter Property="KeyboardNavigation.TabNavigation" Value="Cycle" />
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="FontFamily" Value="Yu Gothic UI Light" />
                <Setter Property="FontSize" Value="16" />
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
                <Setter Property="CaretBrush" Value="{DynamicResource PathBrush}"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
                <Setter Property="PasswordChar" Value="●" />
                <!--<Setter Property="MinHeight" Value="20" />-->
                <Setter Property="AllowDrop" Value="true" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type PasswordBox}">
                            <Border x:Name="Border"
                            BorderThickness="0,0,0,1"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}">
                                <ScrollViewer x:Name="PART_ContentHost"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
            <Style x:Key="ButtonDS" TargetType="Button">
                <Setter Property="Margin" Value="5"/>
                <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                <Setter Property="FontFamily" Value="{DynamicResource Font}"/>
                <Setter Property="FontSize" Value="16"/>
                <Setter Property="Background" Value="{DynamicResource PanelBrush}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Name="border"
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="1"
                                CornerRadius="5"
                                Background="{TemplateBinding Background}">
                                <ContentPresenter Margin="5,4,5,4" HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="{DynamicResource MouseOver}" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource MousePressed}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="border" Property="BorderBrush" Value="DimGray"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ButtonIconDS" TargetType="Button">
                <Setter Property="Margin" Value="5"/>
                <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                <Setter Property="FontSize" Value="16"/>
                <Setter Property="Background" Value="{DynamicResource PanelBrush}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Name="border"
                                    CornerRadius="10"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="{DynamicResource MouseOver}" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="{DynamicResource MousePressed}" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="True">
                                    <Setter Property="Visibility" Value="Visible" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
            <Style x:Key="TextBlockDS" TargetType="TextBlock">
                <Setter Property="FontFamily" Value="{DynamicResource Font}"/>
                <Setter Property="Margin" Value="3"/>
                <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                <Setter Property="FontSize" Value="16"/>
            </Style>

            <Style x:Key="ListBoxDS" TargetType="ListBox">
                <Setter Property="SnapsToDevicePixels"
          Value="true" />
                <Setter Property="OverridesDefaultStyle"
          Value="true" />
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
          Value="Auto" />
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
          Value="Auto" />
                <Setter Property="ScrollViewer.CanContentScroll"
          Value="true" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListBox">
                            <Border Name="Border"
                BorderThickness="0,1,0,1"
                CornerRadius="0"
                                    Background="Transparent">
                                <Border.BorderBrush>
                                    <LinearGradientBrush>
                                        <GradientStop Color="Transparent" Offset="0"/>
                                        <GradientStop Color="Gray" Offset="0.5"/>
                                        <GradientStop Color="Transparent" Offset="1"/>
                                    </LinearGradientBrush>
                                </Border.BorderBrush>
                                <ScrollViewer Margin="0"
                        Focusable="false">
                                    <StackPanel Margin="2"
                        IsItemsHost="True" />
                                </ScrollViewer>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled"
                   Value="false">                                    
                                    <Setter TargetName="Border"
                    Property="BorderBrush">
                                        <Setter.Value>
                                            <SolidColorBrush Color="Gray" />
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <Trigger Property="IsGrouping"
                   Value="true">
                                    <Setter Property="ScrollViewer.CanContentScroll"
                    Value="false" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ListBoxItemDS" TargetType="ListBoxItem">
                <Setter Property="SnapsToDevicePixels"
          Value="true" />
                <Setter Property="OverridesDefaultStyle"
          Value="true" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListBoxItem">
                            <Border x:Name="Border"
                Padding="2" 
                SnapsToDevicePixels="true"
                                    Background="Transparent">
                                <ContentPresenter />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <ControlTemplate TargetType="ToggleButton" x:Key="ComboboxButton">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition Width="20" />
                    </Grid.ColumnDefinitions>
                    <Border Grid.ColumnSpan="2" Name="Border"
              BorderBrush="{DynamicResource BorderBrush}" 
              CornerRadius="3" BorderThickness="1" 
              Background="{DynamicResource PanelBrush}" />
                    <Border Grid.Column="1" Margin="1, 1, 1, 1" BorderBrush="{DynamicResource BorderBrush}" Name="ButtonBorder"
              CornerRadius="3" BorderThickness="0" 
              Background="{DynamicResource PanelBrush}" />

                    <Path Name="Arrow" Grid.Column="1" 
            Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
            HorizontalAlignment="Center" Fill="{DynamicResource PathBrush}"
            VerticalAlignment="Center" />
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="UIElement.IsMouseOver" Value="True">
                        <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="{DynamicResource MouseOver}"/>
                    </Trigger>
                    <Trigger Property="ToggleButton.IsChecked" Value="True">
                        <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="{DynamicResource MousePressed}"/>
                        <Setter Property="Shape.Fill" TargetName="Arrow" Value="{DynamicResource AccentBrush}"/>
                    </Trigger>
                    <Trigger Property="UIElement.IsEnabled" Value="False">
                        <Setter Property="Panel.Background" TargetName="Border" Value="Gray"/>
                        <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="Transparent"/>
                        <Setter Property="TextElement.Foreground" Value="Gray"/>
                        <Setter Property="Shape.Fill" TargetName="Arrow" Value="Gray"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
            <Style x:Key="ComboboxStyleDS" TargetType="{x:Type ComboBox}">
                <Setter Property="UIElement.SnapsToDevicePixels" Value="True"/>
                <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True"/>
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
                <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
                <Setter Property="ItemContainerStyle" Value="{DynamicResource ComboboxItemDS}"/>
                <Setter Property="TextElement.Foreground" Value="{DynamicResource TextBrush}"/>
                <Setter Property="Background" Value="{DynamicResource PanelBrush}"/>
                <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ComboBox">
                            <Grid Background="{TemplateBinding Background}">
                                <ToggleButton Name="ToggleButton" Grid.Column="2"
                        ClickMode="Press" Focusable="False"
                        IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                        Template="{DynamicResource ComboboxButton}"/>

                                <ContentPresenter Name="ContentSite" Margin="35, 2, 35, 2" IsHitTestVisible="False"                                          
                              HorizontalAlignment="Stretch" VerticalAlignment="Center"                              
                              Content="{TemplateBinding ComboBox.SelectionBoxItem}"                                          
                              ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"/>
                                <TextBox Name="PART_EditableTextBox" Margin="3, 3, 23, 3"                     
                         IsReadOnly="{TemplateBinding IsReadOnly}"
                         Visibility="Hidden" Background="{DynamicResource PanelBrush}"
                         HorizontalAlignment="Left" VerticalAlignment="Center"
                         Focusable="True" >
                                    <TextBox.Template>
                                        <ControlTemplate TargetType="TextBox" >
                                            <Border Name="PART_ContentHost" Focusable="False" />
                                        </ControlTemplate>
                                    </TextBox.Template>
                                </TextBox>
                                <!-- Popup showing items -->
                                <Popup Name="Popup" Placement="Bottom"
                           Focusable="False" AllowsTransparency="True"
                           IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}"
                           PopupAnimation="Slide">
                                    <Grid Name="DropDown" SnapsToDevicePixels="True"
                                MinWidth="{TemplateBinding FrameworkElement.ActualWidth}"
                                MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}">
                                        <Border Name="DropDownBorder" Background="{DynamicResource PanelBrush}" Margin="0, 0, 0, 0"
                                    CornerRadius="0,0,5,5" BorderThickness="1,1,1,1" 
                                    BorderBrush="{DynamicResource BorderBrush}"/>
                                        <ScrollViewer Margin="4" SnapsToDevicePixels="True">
                                            <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
                                        </ScrollViewer>
                                    </Grid>
                                </Popup>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="ItemsControl.HasItems" Value="False">
                                    <Setter Property="FrameworkElement.MinHeight" TargetName="DropDownBorder" Value="95"/>
                                </Trigger>
                                <Trigger Property="UIElement.IsEnabled" Value="False">
                                    <Setter Property="TextElement.Foreground" Value="Gray"/>
                                </Trigger>
                                <Trigger Property="ItemsControl.IsGrouping" Value="True">
                                    <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                                </Trigger>
                                <Trigger Property="ComboBox.IsEditable" Value="True">
                                    <Setter Property="KeyboardNavigation.IsTabStop" Value="False"/>
                                    <Setter Property="UIElement.Visibility" TargetName="PART_EditableTextBox" Value="Visible"/>
                                    <Setter Property="UIElement.Visibility" TargetName="ContentSite" Value="Hidden"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ComboboxItemDS" TargetType="ComboBoxItem">
                <Setter Property="OverridesDefaultStyle" Value="True"/>
                <Setter Property="Background" Value="{DynamicResource PanelBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                <Setter Property="FontFamily" Value="{DynamicResource Font}"/>
                <Setter Property="FontSize" Value="16"/>
                <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="Template" Value="{DynamicResource ComboboxT}"/>
            </Style>
            <ControlTemplate x:Key="ComboboxT" TargetType="ComboBoxItem">
                <Border x:Name="Border"
                        Padding="5"
                        BorderThickness="2"
                        CornerRadius="3"
                        BorderBrush="Transparent">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="20"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Column="1" Style="{DynamicResource TextBlockDS}">
                                <ContentPresenter/>
                        </TextBlock>
                    </Grid>
                </Border>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsHighlighted" Value="True">
                        <Setter TargetName="Border" Property="Background" Value="{DynamicResource MouseOver}"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <!--ScrollBar-->
            <Style x:Key="ScrollBarLineButtonStyle" TargetType="{x:Type RepeatButton}">
                <Setter Property="Focusable" Value="False"/>
                <Setter Property="Template" >
                    <Setter.Value>
                        <ControlTemplate TargetType="RepeatButton">
                            <Grid Margin="1">
                                <Border x:Name="Border" Background="Transparent" BorderBrush="Transparent" CornerRadius="5">
                                    <Viewbox Width="15" Height="15">
                                        <Canvas Width="24" Height="24">
                                            <Path x:Name="Path" Fill="{DynamicResource MousePressed}" Data="M7.41,15.41L12,
                                          10.83L16.59,15.41L18,14L12,8L6,14L7.41,15.41Z" />
                                        </Canvas>
                                    </Viewbox>
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="{DynamicResource MousePressed}" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Path" Property="Fill" Value="{DynamicResource MouseOver}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ScrollBarLineButtonBottomStyle" TargetType="{x:Type RepeatButton}">
                <Setter Property="Focusable" Value="False"/>
                <Setter Property="Template" >
                    <Setter.Value>
                        <ControlTemplate TargetType="RepeatButton">
                            <Grid Margin="1">
                                <Border x:Name="Border" Background="Transparent" BorderBrush="Transparent" CornerRadius="5">
                                    <Viewbox Width="15" Height="15">
                                        <Canvas Width="24" Height="24">
                                            <Path x:Name="Path" Fill="{DynamicResource MousePressed}" Data="M7.41,8.58L12,
                                          13.17L16.59,8.58L18,10L12,16L6,10L7.41,8.58Z" />
                                        </Canvas>
                                    </Viewbox>
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="{DynamicResource MousePressed}" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Path" Property="Fill" Value="{DynamicResource MouseOver}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ScrollBarPageButtonStyle" TargetType="{x:Type RepeatButton}">
                <Setter Property="IsTabStop" Value="False"/>
                <Setter Property="Focusable" Value="False"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                            <Border Background="Transparent"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ScrollBarThumbStyle" TargetType="{x:Type Thumb}">
                <Setter Property="IsTabStop" Value="False"/>
                <Setter Property="Focusable" Value="False"/>
                <Setter Property="Margin" Value="1,0,1,0" />
                <Setter Property="Background" Value="{DynamicResource PanelBrush}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Thumb}">
                            <Border x:Name="VSB" Background="{TemplateBinding Background}" Opacity="0.8" Margin="3" CornerRadius="5"/>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="VSB" Property="Background" Value="{DynamicResource MouseOver}" />
                                    <Setter TargetName="VSB" Property="Opacity" Value="1" />
                                </Trigger>
                                <Trigger Property="IsDragging" Value="True">
                                    <Setter TargetName="VSB" Property="Background" Value="{DynamicResource MousePressed}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition MaxHeight="20"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition MaxHeight="20"/>
                    </Grid.RowDefinitions>

                    <RepeatButton Grid.Row="0" Height="20"
                          Style="{DynamicResource ScrollBarLineButtonStyle}"
                          Command="ScrollBar.LineUpCommand" >
                    </RepeatButton>
                    <Track Name="PART_Track" Grid.Row="1" 
                   IsDirectionReversed="True">
                        <Track.DecreaseRepeatButton>
                            <RepeatButton Command="ScrollBar.PageUpCommand" Style="{DynamicResource ScrollBarPageButtonStyle}">
                            </RepeatButton>
                        </Track.DecreaseRepeatButton>
                        <Track.Thumb>
                            <Thumb x:Name="Thumb" Style="{DynamicResource ScrollBarThumbStyle}"/>
                        </Track.Thumb>
                        <Track.IncreaseRepeatButton>
                            <RepeatButton Command="ScrollBar.PageDownCommand" Style="{DynamicResource ScrollBarPageButtonStyle}">
                            </RepeatButton>
                        </Track.IncreaseRepeatButton>
                    </Track>
                    <RepeatButton Grid.Row="3" Height="20"
                          Style="{DynamicResource ScrollBarLineButtonBottomStyle}"
                          Command="ScrollBar.LineDownCommand">
                    </RepeatButton>
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter TargetName="Thumb" Property="Background" Value="{DynamicResource PanelBrush}"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
            <Style x:Key="ScrollBarLineButtonHStyle" TargetType="{x:Type RepeatButton}">
                <Setter Property="Focusable" Value="False"/>
                <Setter Property="Template" >
                    <Setter.Value>
                        <ControlTemplate TargetType="RepeatButton">
                            <Grid Margin="1">
                                <Border x:Name="Border" Background="Transparent" BorderBrush="Transparent" CornerRadius="5">
                                    <Viewbox Width="15" Height="15">
                                        <Canvas Width="24" Height="24">
                                            <Path x:Name="Path" Fill="{DynamicResource MousePressed}" Data="M15.41,16.58L10.83,
                                          12L15.41,7.41L14,6L8,12L14,18L15.41,16.58Z" />
                                        </Canvas>
                                    </Viewbox>
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="{DynamicResource MousePressed}" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Path" Property="Fill" Value="{DynamicResource MouseOver}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ScrollBarLineButtonRightStyle" TargetType="{x:Type RepeatButton}">
                <Setter Property="Focusable" Value="False"/>
                <Setter Property="Template" >
                    <Setter.Value>
                        <ControlTemplate TargetType="RepeatButton">
                            <Grid Margin="1">
                                <Border x:Name="Border" Background="Transparent" BorderBrush="Transparent" CornerRadius="5">
                                    <Viewbox Width="15" Height="15">
                                        <Canvas Width="24" Height="24">
                                            <Path x:Name="Path" Fill="{DynamicResource MousePressed}" Data="M8.59,16.58L13.17,
                                          12L8.59,7.41L10,6L16,12L10,18L8.59,16.58Z" />
                                        </Canvas>
                                    </Viewbox>
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="{DynamicResource MousePressed}" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Path" Property="Fill" Value="{DynamicResource MouseOver}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ScrollBarPageButtonHStyle" TargetType="{x:Type RepeatButton}">
                <Setter Property="IsTabStop" Value="False"/>
                <Setter Property="Focusable" Value="False"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                            <Border Background="Transparent"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition MaxWidth="20"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition MaxWidth="20"/>
                    </Grid.ColumnDefinitions>

                    <RepeatButton Grid.Column="0" Width="20"
                          Style="{DynamicResource ScrollBarLineButtonHStyle}"
                          Command="ScrollBar.LineLeftCommand" >
                    </RepeatButton>
                    <Track Name="PART_Track" Grid.Column="1" 
                   IsDirectionReversed="False">
                        <Track.DecreaseRepeatButton>
                            <RepeatButton Command="ScrollBar.PageLeftCommand" Style="{DynamicResource ScrollBarPageButtonHStyle}">
                            </RepeatButton>
                        </Track.DecreaseRepeatButton>
                        <Track.Thumb>
                            <Thumb Style="{DynamicResource ScrollBarThumbStyle}"/>
                        </Track.Thumb>
                        <Track.IncreaseRepeatButton>
                            <RepeatButton Command="ScrollBar.PageRightCommand" Style="{DynamicResource ScrollBarPageButtonHStyle}">
                            </RepeatButton>
                        </Track.IncreaseRepeatButton>
                    </Track>
                    <RepeatButton Grid.Column="3" Width="20"
                          Style="{DynamicResource ScrollBarLineButtonRightStyle}"
                          Command="ScrollBar.LineRightCommand">
                    </RepeatButton>
                </Grid>
            </ControlTemplate>
            <Style x:Name="AuraDefaultScrollBar" TargetType="{x:Type ScrollBar}">
                <Setter Property="BorderThickness" Value="5"/>
                <Style.Triggers>
                    <Trigger Property="Orientation"
             Value="Horizontal">
                        <Setter Property="Width"
              Value="Auto" />
                        <Setter Property="Height"
              Value="20" />
                        <Setter Property="Template"
              Value="{StaticResource HorizontalScrollBar}" />
                    </Trigger>
                    <Trigger Property="Orientation"
             Value="Vertical">
                        <Setter Property="Width"
              Value="20" />
                        <Setter Property="Height"
              Value="Auto" />
                        <Setter Property="Template"
              Value="{StaticResource VerticalScrollBar}" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="AuraScrollViewer"
       TargetType="{x:Type ScrollViewer}">
                <Setter Property="OverridesDefaultStyle"
          Value="True" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollViewer}">
                            <Grid Background="Transparent" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                <Border Grid.Column="0"
                            BorderThickness="0">
                                    <ScrollContentPresenter CanContentScroll="{TemplateBinding CanContentScroll}" />
                                </Border>
                                <ScrollBar x:Name="PART_VerticalScrollBar"
                                   Template="{DynamicResource VerticalScrollBar}"
                                   Value="{TemplateBinding VerticalOffset}"
                                   Maximum="{TemplateBinding ScrollableHeight}"
                                   ViewportSize="{TemplateBinding ViewportHeight}"
                                   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                   HorizontalAlignment="Right"
                                   Grid.Row="0"
                                   Grid.Column="1"
                                   Margin="0,0,0,10"/>
                                <ScrollBar x:Name="PART_HorizontalScrollBar"
                                   Template="{DynamicResource HorizontalScrollBar}"
                                   Orientation="Horizontal"
                                   Grid.Row="1"
                                   Grid.Column="0"
                                   VerticalAlignment="Bottom"
                                   Margin="0,0,10,0"
                                   Value="{TemplateBinding HorizontalOffset}"
                                   Maximum="{TemplateBinding ScrollableWidth}"
                                   ViewportSize="{TemplateBinding ViewportWidth}"
                                   Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

        </ResourceDictionary>
    </Application.Resources>
</Application>
